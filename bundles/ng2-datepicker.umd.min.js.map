{"version":3,"sources":["ng://ng2-datepicker/component/ng-datepicker.component.html","ng://ng2-datepicker/component/ng-datepicker.component.ts","ng://ng2-datepicker/module/ng-datepicker.module.ts","ng://ng2-datepicker/public_api.ts","ng://ng2-datepicker/ng2-datepicker.ts"],"names":["i0","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","_r26","ɵɵnextContext","displayValue","toggle","ɵɵelementEnd","ɵɵproperty","ctx_r23","placeholder","addClass","addStyle","fieldId","disabled","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","name_r32","_r36","day_r33","ctx","$implicit","i_r34","index","ctx_r35","isSelectable","setDate","ɵɵpureFunction4","_c0","inThisMonth","isToday","isSelected","ɵɵtextInterpolate1","day","ɵɵnamespaceHTML","ɵɵtemplate","NgDatepickerComponent_div_3_div_22_span_2_Template","NgDatepickerComponent_div_3_div_22_span_4_Template","ctx_r28","dayNames","days","_r41","i_r39","setYear","ɵɵpureFunction1","_c1","year_r38","isThisYear","year","NgDatepickerComponent_div_3_div_23_span_2_Template","ctx_r29","scrollOptions","years","ɵɵnamespaceSVG","_r43","prevMonth","ɵɵelement","toggleView","nextMonth","NgDatepickerComponent_div_3_div_22_Template","NgDatepickerComponent_div_3_div_23_Template","ɵɵclassMapInterpolate1","ctx_r24","position","barTitle","view","counter","isNil","value","NgDatepickerComponent","elementRef","this","headless","isOpened","positions","onTouchedCallback","onChangeCallback","barBackground","gridBackground","barBorderRadius","gridBorderRadius","barWidth","gridWidth","barMargin","gridMargin","prototype","setDisabledState","isDisabled","Object","defineProperty","innerValue","val","ngOnInit","date","Date","setOptions","initDayNames","initYears","indexOf","TypeError","join","ngOnChanges","changes","init","today","minYear","options","date_fns_1","maxYear","displayFormat","barTitleFormat","dayNamesFormat","barTitleIfEmpty","firstCalendarDay","locale","defaultFieldId","useEmptyBarTitle","i","close","isDateSelectable","minDateSet","minDate","maxDateSet","maxDate","timestamp","valueOf","_this","actualDate","start","end","map","month","tmp","prevDays","unshift","range","Array","from","x","push","reset","fireValueChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","onBlur","e","input","nativeElement","querySelector","target","contains","container","classList","ɵɵdirectiveInject","ElementRef","selectors","hostBindings","rf","provide","forms_1","useExisting","core_1","multi","ɵɵNgOnChangesFeature","ngContentSelectors","_c2","decls","vars","consts","template","NgDatepickerComponent_input_1_Template","ɵɵprojection","NgDatepickerComponent_div_3_Template","exports","NgDatepickerModule","imports","common_1","ngx_slimscroll_1","declarations","ng_datepicker_component_1","__export","ngDatepicker_module","ngDatepicker_component","public_api"],"mappings":"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","sourcesContent":["<div class=\"ngx-datepicker-container\">\n  <input type=\"text\" *ngIf=\"!headless\" class=\"ngx-datepicker-input\" [(ngModel)]=\"displayValue\" readonly [placeholder]=\"placeholder\"\n    [ngClass]=\"addClass\" [ngStyle]=\"addStyle\" [id]=\"fieldId\" [disabled]=\"disabled\" (click)=\"toggle()\" />\n  <ng-content></ng-content>\n  <div class=\"ngx-datepicker-calendar-container ngx-datepicker-position-{{position}}\" *ngIf=\"isOpened\">\n    <div class=\"topbar-container\">\n      <svg width=\"7px\" height=\"10px\" viewBox=\"0 0 7 10\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        (click)=\"prevMonth()\">\n        <g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g transform=\"translate(-923.000000, -1882.000000)\" fill=\"#CED0DA\">\n            <g transform=\"translate(80.000000, 1361.000000)\">\n              <g transform=\"translate(0.000000, 430.000000)\">\n                <g transform=\"translate(825.000000, 0.000000)\">\n                  <g transform=\"translate(0.000000, 72.000000)\">\n                    <g transform=\"translate(18.000000, 15.000000)\">\n                      <polygon id=\"Back\" points=\"6.015 4 0 9.013 6.015 14.025\"></polygon>\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </svg>\n      <span class=\"topbar-title\" (click)=\"toggleView()\">{{ barTitle }}</span>\n      <svg width=\"7px\" height=\"10px\" viewBox=\"0 0 6 10\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n        (click)=\"nextMonth()\">\n        <g id=\"Source-Sans---UI-Elements-Kit\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"White-Layout\" transform=\"translate(-1182.000000, -1882.000000)\" fill=\"#CED0DA\">\n            <g id=\"Dropdowns-&amp;-Selector\" transform=\"translate(80.000000, 1361.000000)\">\n              <g id=\"Dropdowns\" transform=\"translate(0.000000, 430.000000)\">\n                <g id=\"Calendar\" transform=\"translate(825.000000, 0.000000)\">\n                  <g transform=\"translate(0.000000, 72.000000)\" id=\"Top-Bar-Nav\">\n                    <g transform=\"translate(18.000000, 15.000000)\">\n                      <polygon id=\"Forward\" transform=\"translate(262.007500, 9.012500) scale(-1, 1) translate(-262.007500, -9.012500) \" points=\"265.015 4 259 9.013 265.015 14.025\"></polygon>\n                    </g>\n                  </g>\n                </g>\n              </g>\n            </g>\n          </g>\n        </g>\n      </svg>\n    </div>\n    <div class=\"main-calendar-container\" *ngIf=\"view === 'days'\">\n      <div class=\"main-calendar-day-names\">\n        <span class=\"day-name-unit\" *ngFor=\"let name of dayNames\">{{ name }}</span>\n      </div>\n      <div class=\"main-calendar-days\">\n        <span class=\"day-unit\" *ngFor=\"let day of days; let i = index;\" [ngClass]=\"{ 'is-prev-month': !day.inThisMonth, 'is-today': day.isToday, 'is-selected': day.isSelected, 'is-disabled': !day.isSelectable }\"\n          (click)=\"day.isSelectable && setDate(i)\">\n          {{ day.day }}\n        </span>\n      </div>\n    </div>\n    <div class=\"main-calendar-container\" *ngIf=\"view === 'years'\">\n      <div class=\"main-calendar-years\" slimScroll [options]=\"scrollOptions\">\n        <span class=\"year-unit\" *ngFor=\"let year of years; let i = index;\" [ngClass]=\"{ 'is-selected': year.isThisYear }\" (click)=\"setYear(i)\">{{ year.year }}</span>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, ElementRef, HostListener, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport {\n  startOfMonth,\n  endOfMonth,\n  addMonths,\n  subMonths,\n  setYear,\n  eachDay,\n  getDate,\n  getMonth,\n  getYear,\n  isToday,\n  isSameDay,\n  isSameMonth,\n  isSameYear,\n  format,\n  getDay,\n  subDays,\n  setDay\n} from 'date-fns';\nimport { ISlimScrollOptions } from 'ngx-slimscroll';\n\nexport type AddClass = string | string[] | { [k: string]: boolean } | null;\n\nexport interface DatepickerOptions {\n  minYear?: number; // default: current year - 30\n  maxYear?: number; // default: current year + 30\n  displayFormat?: string; // default: 'MMM D[,] YYYY'\n  barTitleFormat?: string; // default: 'MMMM YYYY'\n  dayNamesFormat?: string; // default 'ddd'\n  barTitleIfEmpty?: string;\n  firstCalendarDay?: number; // 0 = Sunday (default), 1 = Monday, ..\n  locale?: object;\n  minDate?: Date;\n  maxDate?: Date;\n  /** Placeholder for the input field */\n  placeholder?: string;\n  /** [ngClass] to add to the input field */\n  addClass?: AddClass;\n  /** [ngStyle] to add to the input field */\n  addStyle?: { [k: string]: any } | null;\n  /** ID to assign to the input field */\n  fieldId?: string;\n  /** If false, barTitleIfEmpty will be disregarded and a date will always be shown. Default: true */\n  useEmptyBarTitle?: boolean;\n}\n\n// Counter for calculating the auto-incrementing field ID\nlet counter = 0;\n\n/**\n * Internal library helper that helps to check if value is empty\n * @param value\n */\nconst isNil = (value: Date | DatepickerOptions) => {\n  return (typeof value === 'undefined') || (value === null);\n};\n\n@Component({\n  selector: 'ng-datepicker',\n  templateUrl: 'ng-datepicker.component.html',\n  styleUrls: ['ng-datepicker.component.sass'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgDatepickerComponent), multi: true }\n  ]\n})\nexport class NgDatepickerComponent implements ControlValueAccessor, OnInit, OnChanges {\n  @Input() options: DatepickerOptions;\n\n  /**\n   * Disable datepicker's input\n   */\n  @Input() headless = false;\n\n  /**\n   * Set datepicker's visibility state\n   */\n  @Input() isOpened = false;\n\n  /**\n   * Datepicker dropdown position\n   */\n  @Input() position = 'bottom-right';\n\n  private positions = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n\n  innerValue: Date;\n  displayValue: string;\n  displayFormat: string;\n  date: Date;\n  barTitle: string;\n  barTitleFormat: string;\n  barTitleIfEmpty: string;\n  minYear: number;\n  maxYear: number;\n  firstCalendarDay: number;\n  view: string;\n  years: { year: number; isThisYear: boolean }[];\n  dayNames: string[];\n  dayNamesFormat: string;\n  scrollOptions: ISlimScrollOptions;\n  days: {\n    date: Date;\n    day: number;\n    month: number;\n    year: number;\n    inThisMonth: boolean;\n    isToday: boolean;\n    isSelected: boolean;\n    isSelectable: boolean;\n  }[];\n  locale: object;\n  placeholder: string;\n  addClass: AddClass;\n  addStyle: { [k: string]: any } | null;\n  fieldId: string;\n  useEmptyBarTitle: boolean;\n  disabled: boolean;\n\n  private onTouchedCallback: () => void = () => { };\n  private onChangeCallback: (_: any) => void = () => { };\n\n  public setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  get value(): Date {\n    return this.innerValue;\n  }\n\n  set value(val: Date) {\n    this.innerValue = val;\n    this.onChangeCallback(this.innerValue);\n  }\n\n  constructor(private elementRef: ElementRef) {\n    this.scrollOptions = {\n      barBackground: '#DFE3E9',\n      gridBackground: '#FFFFFF',\n      barBorderRadius: '3',\n      gridBorderRadius: '3',\n      barWidth: '6',\n      gridWidth: '6',\n      barMargin: '0',\n      gridMargin: '0'\n    };\n  }\n\n  ngOnInit() {\n    this.view = 'days';\n    this.date = new Date();\n    this.setOptions();\n    this.initDayNames();\n    this.initYears();\n\n    // Check if 'position' property is correct\n    if (this.positions.indexOf(this.position) === -1) {\n      throw new TypeError(`ng-datepicker: invalid position property value '${this.position}' (expected: ${this.positions.join(', ')})`);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if ('options' in changes) {\n      this.setOptions();\n      this.initDayNames();\n      this.init();\n      this.initYears();\n    }\n  }\n\n  get defaultFieldId(): string {\n    // Only evaluate and increment if required\n    const value = `datepicker-${counter++}`;\n    Object.defineProperty(this, 'defaultFieldId', {value});\n\n    return value;\n  }\n\n  setOptions(): void {\n    const today = new Date(); // this const was added because during my tests, I noticed that at this level this.date is undefined\n    this.minYear = this.options && this.options.minYear || getYear(today) - 30;\n    this.maxYear = this.options && this.options.maxYear || getYear(today) + 30;\n    this.displayFormat = this.options && this.options.displayFormat || 'MMM D[,] YYYY';\n    this.barTitleFormat = this.options && this.options.barTitleFormat || 'MMMM YYYY';\n    this.dayNamesFormat = this.options && this.options.dayNamesFormat || 'ddd';\n    this.barTitleIfEmpty = this.options && this.options.barTitleIfEmpty || 'Click to select a date';\n    this.firstCalendarDay = this.options && this.options.firstCalendarDay || 0;\n    this.locale = this.options && { locale: this.options.locale } || {};\n    this.placeholder = this.options && this.options.placeholder || '';\n    this.addClass = this.options && this.options.addClass || {};\n    this.addStyle = this.options && this.options.addStyle || {};\n    this.fieldId = this.options && this.options.fieldId || this.defaultFieldId;\n    this.useEmptyBarTitle = this.options && 'useEmptyBarTitle' in this.options ? this.options.useEmptyBarTitle : true;\n  }\n\n  nextMonth(): void {\n    this.date = addMonths(this.date, 1);\n    this.init();\n  }\n\n  prevMonth(): void {\n    this.date = subMonths(this.date, 1);\n    this.init();\n  }\n\n  setDate(i: number): void {\n    this.date = this.days[i].date;\n    this.value = this.date;\n    this.init();\n    this.close();\n  }\n\n  setYear(i: number): void {\n    this.date = setYear(this.date, this.years[i].year);\n    this.init();\n    this.initYears();\n    this.view = 'days';\n  }\n\n  /**\n   * Checks if specified date is in range of min and max dates\n   * @param date\n   */\n  private isDateSelectable(date: Date): boolean {\n    if (isNil(this.options)) {\n      return true;\n    }\n\n    const minDateSet = !isNil(this.options.minDate);\n    const maxDateSet = !isNil(this.options.maxDate);\n    const timestamp = date.valueOf();\n\n    if (minDateSet && (timestamp < this.options.minDate.valueOf())) {\n      return false;\n    }\n\n    if (maxDateSet && (timestamp > this.options.maxDate.valueOf())) {\n      return false;\n    }\n\n    return true;\n  }\n\n  init(): void {\n    // this.date may be null after .reset(); fall back to current date.\n    const actualDate = this.date || new Date();\n    const start = startOfMonth(actualDate);\n    const end = endOfMonth(actualDate);\n\n    this.days = eachDay(start, end).map(date => {\n      return {\n        date: date,\n        day: getDate(date),\n        month: getMonth(date),\n        year: getYear(date),\n        inThisMonth: true,\n        isToday: isToday(date),\n        isSelected: isSameDay(date, this.innerValue) && isSameMonth(date, this.innerValue) && isSameYear(date, this.innerValue),\n        isSelectable: this.isDateSelectable(date)\n      };\n    });\n\n    const tmp = getDay(start) - this.firstCalendarDay;\n    const prevDays = tmp < 0 ? 7 - this.firstCalendarDay : tmp;\n\n    for (let i = 1; i <= prevDays; i++) {\n      const date = subDays(start, i);\n      this.days.unshift({\n        date: date,\n        day: getDate(date),\n        month: getMonth(date),\n        year: getYear(date),\n        inThisMonth: false,\n        isToday: isToday(date),\n        isSelected: isSameDay(date, this.innerValue) && isSameMonth(date, this.innerValue) && isSameYear(date, this.innerValue),\n        isSelectable: this.isDateSelectable(date)\n      });\n    }\n\n    if (this.innerValue) {\n      this.displayValue = format(this.innerValue, this.displayFormat, this.locale);\n      this.barTitle = format(start, this.barTitleFormat, this.locale);\n    } else {\n      this.displayValue = '';\n      this.barTitle = this.useEmptyBarTitle ? this.barTitleIfEmpty : format(start, this.barTitleFormat, this.locale);\n    }\n  }\n\n  initYears(): void {\n    const range = this.maxYear - this.minYear;\n    this.years = Array.from(new Array(range), (x, i) => i + this.minYear).map(year => {\n      return { year: year, isThisYear: year === getYear(this.date) };\n    });\n  }\n\n  initDayNames(): void {\n    this.dayNames = [];\n    const start = this.firstCalendarDay;\n    for (let i = start; i <= 6 + start; i++) {\n      const date = setDay(new Date(), i);\n      this.dayNames.push(format(date, this.dayNamesFormat, this.locale));\n    }\n  }\n\n  toggleView(): void {\n    this.view = this.view === 'days' ? 'years' : 'days';\n  }\n\n  toggle(): void {\n    this.isOpened = !this.isOpened;\n\n    if (!this.isOpened && this.view === 'years') {\n      this.toggleView();\n    }\n  }\n\n  close(): void {\n    this.isOpened = false;\n\n    if (this.view === 'years') {\n      this.toggleView();\n    }\n  }\n\n  reset(fireValueChangeEvent = false): void {\n    this.date = null;\n    this.innerValue = null;\n    this.init();\n    if (fireValueChangeEvent && this.onChangeCallback) {\n      this.onChangeCallback(this.innerValue);\n    }\n  }\n\n  writeValue(val: Date) {\n    if (val) {\n      this.date = val;\n      this.innerValue = val;\n      this.init();\n      this.displayValue = format(this.innerValue, this.displayFormat, this.locale);\n      this.barTitle = format(startOfMonth(val), this.barTitleFormat, this.locale);\n    }\n  }\n\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  @HostListener('document:click', ['$event']) onBlur(e: MouseEvent) {\n    if (!this.isOpened) {\n      return;\n    }\n\n    const input = this.elementRef.nativeElement.querySelector('.ngx-datepicker-input');\n\n    if (input == null) {\n      return;\n    }\n\n    if (e.target === input || input.contains(<any>e.target)) {\n      return;\n    }\n\n    const container = this.elementRef.nativeElement.querySelector('.ngx-datepicker-calendar-container');\n    if (container && container !== e.target && !container.contains(<any>e.target) && !(<any>e.target).classList.contains('year-unit')) {\n      this.close();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgSlimScrollModule } from 'ngx-slimscroll';\nimport { NgDatepickerComponent } from '../component/ng-datepicker.component';\n\n@NgModule({\n  declarations: [ NgDatepickerComponent ],\n  imports: [ CommonModule, FormsModule, NgSlimScrollModule ],\n  exports: [ NgDatepickerComponent, CommonModule, FormsModule, NgSlimScrollModule ]\n})\nexport class NgDatepickerModule { }\n","export * from './module/ng-datepicker.module';\nexport * from './component/ng-datepicker.component';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}